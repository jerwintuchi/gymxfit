// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters", "fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  email            String            @unique
  password         String?
  role             UserRole          @default(MEMBER)
  isMember         Boolean           @default(false) // Indicates if the user is a member
  membershipExpiry DateTime?         // Expiration date if the user is a member
  name             String
  phone            String?
  attendanceLogs   AttendanceLog[]   // Relation to AttendanceLog
  createdAt        DateTime          @default(now())
}

model Admin {
  id        String      @id @default(cuid())
  clerkId   String      @unique // Maps to Clerk's user ID
  role      UserRole    @default(ADMIN)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model AttendanceLog {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id]) // Fixing the relation
  checkIn   DateTime
  checkOut  DateTime?
  createdAt DateTime @default(now())
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  type      NotificationType
  sentTo    String?  // Could be linked to Admin or User ID
  sentAt    DateTime @default(now())
}

enum UserRole {
  ADMIN
  MANAGER
  MEMBER
}

enum NotificationType {
  HIGH_ATTENDANCE
  LOW_ATTENDANCE
  MEMBER_REMINDER
}
